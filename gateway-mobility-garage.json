{
  "openapi" : "3.0.1",
  "info" : {
    "title" : "Enable Integration Gateway API",
    "version" : "1.0"
  },
  "servers" : [ {
    "url" : "/garage"
  } ],
  "paths" : {
    "/api/v1/CaseData" : {
      "post" : {
        "tags" : [ "CaseDataStore" ],
        "summary" : "Stores all information into a local memory storage by the key CaseData.Id.",
        "requestBody" : {
          "description" : "prefilling data passed from AXA.",
          "content" : {
            "application/json-patch_json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Enable.MobilityGarage.Plugin.Models.Case"
              }
            },
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Enable.MobilityGarage.Plugin.Models.Case"
              }
            },
            "text/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Enable.MobilityGarage.Plugin.Models.Case"
              }
            },
            "application/*_json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Enable.MobilityGarage.Plugin.Models.Case"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "if the data is successfully stored."
          },
          "500" : {
            "description" : "if any other error occures."
          }
        }
      }
    }
  },
  "components" : {
    "schemas" : {
      "Enable.MobilityGarage.Plugin.Models.Address" : {
        "type" : "object",
        "properties" : {
          "Country" : {
            "type" : "string",
            "description" : "Gets or sets Country. ISO-2-letter short form.",
            "nullable" : true
          },
          "State" : {
            "type" : "string",
            "description" : "Gets or sets Kanton.",
            "nullable" : true
          },
          "City" : {
            "type" : "string",
            "description" : "Gets or sets City.",
            "nullable" : true
          },
          "Street" : {
            "type" : "string",
            "description" : "Gets or sets Street.",
            "nullable" : true
          },
          "HouseNr" : {
            "type" : "string",
            "description" : "Gets or sets House Number.",
            "nullable" : true
          },
          "Zip" : {
            "type" : "string",
            "description" : "Gets or sets zip code.",
            "nullable" : true
          }
        },
        "additionalProperties" : false,
        "description" : "Party address which has the following sub fields."
      },
      "Enable.MobilityGarage.Plugin.Models.Case" : {
        "required" : [ "CaseId", "Casetype", "TechnicalID" ],
        "type" : "object",
        "properties" : {
          "TechnicalID" : {
            "type" : "string",
            "description" : "Gets or sets a unique identifier for the case data record (UUID)."
          },
          "CaseId" : {
            "type" : "string",
            "description" : "Gets or sets claim's data Id (schaden nr. or any other no)."
          },
          "Casetype" : {
            "type" : "string",
            "description" : "Gets or sets logical identier of the case type for mapping."
          },
          "Description" : {
            "type" : "string",
            "description" : "Gets or sets short description of the Case.",
            "nullable" : true
          },
          "Parties" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Enable.MobilityGarage.Plugin.Models.Party"
            },
            "description" : "Gets or sets a collection of all involved parties.",
            "nullable" : true
          },
          "SpecificCaseData" : {
            "$ref" : "#/components/schemas/Enable.MobilityGarage.Plugin.Models.CaseSpecificData"
          },
          "PaymentData" : {
            "$ref" : "#/components/schemas/Enable.MobilityGarage.Plugin.Models.Payment"
          },
          "Principal" : {
            "$ref" : "#/components/schemas/Enable.MobilityGarage.Plugin.Models.Principal"
          },
          "Provider" : {
            "$ref" : "#/components/schemas/Enable.MobilityGarage.Plugin.Models.Provider"
          },
          "ServiceDescriptionId" : {
            "type" : "string",
            "description" : "Gets or sets service description of WOHP to create.",
            "nullable" : true
          },
          "Documents" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Enable.MobilityGarage.Plugin.Models.Document"
            },
            "description" : "Gets or sets collection of Documents.",
            "nullable" : true
          },
          "Offer" : {
            "$ref" : "#/components/schemas/Enable.MobilityGarage.Plugin.Models.OfferData"
          }
        },
        "additionalProperties" : false
      },
      "Enable.MobilityGarage.Plugin.Models.CaseSpecificData" : {
        "type" : "object",
        "properties" : {
          "DamageAddress" : {
            "$ref" : "#/components/schemas/Enable.MobilityGarage.Plugin.Models.Address"
          },
          "DamagedObjects" : {
            "type" : "string",
            "description" : "Gets or sets What has been damaged.",
            "nullable" : true
          },
          "InsuredValue" : {
            "$ref" : "#/components/schemas/Enable.MobilityGarage.Plugin.Models.EnableMoney"
          },
          "IncidentDate" : {
            "type" : "string",
            "description" : "Gets or sets When did that happen? (with format dd.mm.yyyy).",
            "nullable" : true
          },
          "WorkorderScopeDescription" : {
            "type" : "string",
            "description" : "Gets or sets Scope of the work order.",
            "nullable" : true
          },
          "ReportLanguage" : {
            "type" : "string",
            "description" : "Gets or sets language of the report. Doctor network only.",
            "nullable" : true
          },
          "ReportDueDate" : {
            "type" : "string",
            "description" : "Gets or sets due date of report. Doctor network only.",
            "nullable" : true
          },
          "CaseRemarks" : {
            "type" : "string",
            "description" : "Gets or sets remarks to a case.",
            "nullable" : true
          },
          "DiscussionRequired" : {
            "$ref" : "#/components/schemas/Enable.MobilityGarage.Plugin.Models.YesNoEnum"
          },
          "NumberPlate" : {
            "type" : "string",
            "description" : "Gets or sets the car number plate.",
            "nullable" : true
          },
          "CarBrand" : {
            "type" : "string",
            "description" : "Gets or sets the car brand.",
            "nullable" : true
          },
          "CarModel" : {
            "type" : "string",
            "description" : "Gets or sets the car model.",
            "nullable" : true
          },
          "Mileage" : {
            "type" : "string",
            "description" : "Gets or sets the mileage.",
            "nullable" : true
          },
          "FirstUsage" : {
            "type" : "string",
            "description" : "Gets or sets the first usage. in form dd.MM.yyyy.",
            "nullable" : true
          },
          "RegistrationNumber" : {
            "type" : "string",
            "description" : "Gets or sets the car registration number (VIN).",
            "nullable" : true
          },
          "Transmission" : {
            "$ref" : "#/components/schemas/Enable.MobilityGarage.Plugin.Models.TransmissionEnum"
          },
          "DriveType" : {
            "$ref" : "#/components/schemas/Enable.MobilityGarage.Plugin.Models.DriveTypeEnum"
          },
          "BookValue" : {
            "$ref" : "#/components/schemas/Enable.MobilityGarage.Plugin.Models.EnableMoney"
          },
          "TimeValue" : {
            "$ref" : "#/components/schemas/Enable.MobilityGarage.Plugin.Models.EnableMoney"
          },
          "FaultBy" : {
            "$ref" : "#/components/schemas/Enable.MobilityGarage.Plugin.Models.FaultByEnum"
          },
          "RequestedDelivery" : {
            "$ref" : "#/components/schemas/Enable.MobilityGarage.Plugin.Models.RequestedDeliveryEnum"
          },
          "CoverageClarification" : {
            "$ref" : "#/components/schemas/Enable.MobilityGarage.Plugin.Models.CoverageClarificationEnum"
          },
          "AdditionalServicesBringPickupService" : {
            "$ref" : "#/components/schemas/Enable.MobilityGarage.Plugin.Models.YesNoEnum"
          },
          "BringPickupServicePickupLocation" : {
            "type" : "string",
            "description" : "Gets or sets the bring pickup service pickup location.",
            "nullable" : true
          },
          "AdditionalServicesReplacementCar" : {
            "$ref" : "#/components/schemas/Enable.MobilityGarage.Plugin.Models.YesNoEnum"
          },
          "SpecialInstructions" : {
            "$ref" : "#/components/schemas/Enable.MobilityGarage.Plugin.Models.SpecialInstructionsEnum"
          },
          "LeasingContractEndDate" : {
            "type" : "string",
            "description" : "Gets or sets the leasing contract end date.",
            "nullable" : true
          },
          "DamageCause" : {
            "$ref" : "#/components/schemas/Enable.MobilityGarage.Plugin.Models.DamageCauseEnum"
          },
          "Appointment" : {
            "type" : "string",
            "description" : "Gets or sets the pickup date and time or the data / time of arrival in the garage. format = 2021-12-16T10:55:00Z.",
            "format" : "date-time",
            "nullable" : true
          }
        },
        "additionalProperties" : false,
        "description" : "Case specific data model."
      },
      "Enable.MobilityGarage.Plugin.Models.CoverageClarificationEnum" : {
        "enum" : [ "coveredwithreplacementcar", "coverednoreplacementcar", "covered", "tobecheckedbeforestarting", "notcovered", "notrelevant" ],
        "type" : "string"
      },
      "Enable.MobilityGarage.Plugin.Models.DamageCauseEnum" : {
        "enum" : [ "ParkingDamage", "HailDamage", "GlassDamage", "Collision", "Others" ],
        "type" : "string"
      },
      "Enable.MobilityGarage.Plugin.Models.Document" : {
        "required" : [ "Container", "Type" ],
        "type" : "object",
        "properties" : {
          "Container" : {
            "$ref" : "#/components/schemas/Enable.MobilityGarage.Plugin.Models.Document_ContainerEnum"
          },
          "title" : {
            "type" : "string",
            "description" : "Gets or sets document title including extension.",
            "nullable" : true
          },
          "extension" : {
            "type" : "string",
            "description" : "Gets or sets document extension according the specification.",
            "nullable" : true
          },
          "Type" : {
            "type" : "string",
            "description" : "Gets or sets valid document type according the specification.",
            "default" : "others"
          },
          "contentBase64" : {
            "type" : "string",
            "description" : "Gets or sets contentn of document in base64 encoded form (without new line).",
            "nullable" : true
          },
          "contentURL" : {
            "type" : "string",
            "description" : "Gets or sets content of document as a public URL. Either Enable.MobilityGarage.Plugin.Models.Document.ContentBase64 or Enable.MobilityGarage.Plugin.Models.Document.ContentURL is used. only https or http protocol URLs are supported.",
            "nullable" : true
          }
        },
        "additionalProperties" : false
      },
      "Enable.MobilityGarage.Plugin.Models.Document_ContainerEnum" : {
        "enum" : [ "CaseDocuments", "OfferDocuments", "GarageDamageDocuments", "CreditDocuments", "InvoiceDocuments", "ExpenseCapDocuments", "CancelDocuments", "RequestWorkOrderWithoutOfferDocuments", "WoHistoryDocuments" ],
        "type" : "string"
      },
      "Enable.MobilityGarage.Plugin.Models.DriveTypeEnum" : {
        "enum" : [ "fuel", "electric", "hybrid" ],
        "type" : "string"
      },
      "Enable.MobilityGarage.Plugin.Models.EnableMoney" : {
        "type" : "object",
        "properties" : {
          "Amount" : {
            "type" : "number",
            "format" : "double"
          },
          "Currency" : {
            "type" : "string",
            "nullable" : true
          }
        },
        "additionalProperties" : false
      },
      "Enable.MobilityGarage.Plugin.Models.FaultByEnum" : {
        "enum" : [ "undefined", "own", "thirdparty", "workorder" ],
        "type" : "string"
      },
      "Enable.MobilityGarage.Plugin.Models.OfferData" : {
        "type" : "object",
        "properties" : {
          "RepairOrReplacement" : {
            "$ref" : "#/components/schemas/Enable.MobilityGarage.Plugin.Models.OfferData_RepairOrReplacementEnum"
          },
          "TotalAmountWithVat" : {
            "$ref" : "#/components/schemas/Enable.MobilityGarage.Plugin.Models.EnableMoney"
          },
          "VATAmount" : {
            "$ref" : "#/components/schemas/Enable.MobilityGarage.Plugin.Models.EnableMoney"
          },
          "TotalAmount" : {
            "$ref" : "#/components/schemas/Enable.MobilityGarage.Plugin.Models.EnableMoney"
          },
          "LabourCost" : {
            "$ref" : "#/components/schemas/Enable.MobilityGarage.Plugin.Models.EnableMoney"
          },
          "SpareParts" : {
            "$ref" : "#/components/schemas/Enable.MobilityGarage.Plugin.Models.EnableMoney"
          },
          "PaintCosts" : {
            "$ref" : "#/components/schemas/Enable.MobilityGarage.Plugin.Models.EnableMoney"
          },
          "SmallParts" : {
            "$ref" : "#/components/schemas/Enable.MobilityGarage.Plugin.Models.EnableMoney"
          },
          "ReplacementCarServiceCosts" : {
            "$ref" : "#/components/schemas/Enable.MobilityGarage.Plugin.Models.EnableMoney"
          },
          "Maintenance" : {
            "$ref" : "#/components/schemas/Enable.MobilityGarage.Plugin.Models.OfferData_MaintenanceService"
          },
          "OtherCosts" : {
            "$ref" : "#/components/schemas/Enable.MobilityGarage.Plugin.Models.EnableMoney"
          }
        },
        "additionalProperties" : false
      },
      "Enable.MobilityGarage.Plugin.Models.OfferData_MaintenanceService" : {
        "type" : "object",
        "properties" : {
          "LabourCost" : {
            "$ref" : "#/components/schemas/Enable.MobilityGarage.Plugin.Models.EnableMoney"
          },
          "MaterialCost" : {
            "$ref" : "#/components/schemas/Enable.MobilityGarage.Plugin.Models.EnableMoney"
          },
          "FluidCost" : {
            "$ref" : "#/components/schemas/Enable.MobilityGarage.Plugin.Models.EnableMoney"
          }
        },
        "additionalProperties" : false
      },
      "Enable.MobilityGarage.Plugin.Models.OfferData_RepairOrReplacementEnum" : {
        "enum" : [ "repair", "replacement" ],
        "type" : "string"
      },
      "Enable.MobilityGarage.Plugin.Models.Party" : {
        "required" : [ "PartnerRole" ],
        "type" : "object",
        "properties" : {
          "PartnerRole" : {
            "$ref" : "#/components/schemas/Enable.MobilityGarage.Plugin.Models.Party_PartnerRoleEnum"
          },
          "PartnerType" : {
            "type" : "string",
            "description" : "Gets or sets the Party type.",
            "default" : "Person",
            "nullable" : true
          },
          "PartnerTitle" : {
            "type" : "string",
            "description" : "Gets or sets the party gender if the party is a Person otherwise empty.",
            "nullable" : true
          },
          "CompanyName" : {
            "type" : "string",
            "description" : "Gets or sets the Name of the company if the party is a company otherwise empty.",
            "nullable" : true
          },
          "FirstName" : {
            "type" : "string",
            "description" : "Gets or sets the First name of the party if the party is a Person.",
            "nullable" : true
          },
          "LastName" : {
            "type" : "string",
            "description" : "Gets or sets the Last name of the party if the party is a Person.",
            "nullable" : true
          },
          "Phone" : {
            "type" : "string",
            "description" : "Gets or sets the Party Phone number.",
            "nullable" : true
          },
          "Mobile" : {
            "type" : "string",
            "description" : "gets or sets the Party Mobile number.",
            "nullable" : true
          },
          "Email" : {
            "type" : "string",
            "description" : "Gets or sets the Party E-Mail.",
            "nullable" : true
          },
          "Birthday" : {
            "type" : "string",
            "description" : "Gets or sets the Party date of birth if the party is a Person. Format 'dd.mm.yyyy'.",
            "nullable" : true
          },
          "Nationality" : {
            "type" : "string",
            "description" : "Gets or sets the Nationality of the party if the party is a Person.",
            "nullable" : true
          },
          "SocialSecurityNumber" : {
            "type" : "string",
            "description" : "Gets or sets the Social security number (AHV Nr) of the party if the party is a Person, (format xxx.xxxx.xxxx.xx).",
            "nullable" : true
          },
          "Address" : {
            "$ref" : "#/components/schemas/Enable.MobilityGarage.Plugin.Models.Address"
          },
          "PreferredLanguage" : {
            "type" : "string",
            "description" : "Gets or sets the Communication Language. default \"de-CH\".",
            "default" : "de-CH",
            "nullable" : true
          },
          "Availability" : {
            "type" : "string",
            "description" : "Gets or sets the Party Contact restrictions.",
            "nullable" : true
          }
        },
        "additionalProperties" : false,
        "description" : "is an involved party in a certain role and type."
      },
      "Enable.MobilityGarage.Plugin.Models.Party_PartnerRoleEnum" : {
        "enum" : [ "Customer", "OppositeParty", "ContactPerson", "ServiceReceiver" ],
        "type" : "string"
      },
      "Enable.MobilityGarage.Plugin.Models.Payment" : {
        "type" : "object",
        "properties" : {
          "ExpenseCap" : {
            "$ref" : "#/components/schemas/Enable.MobilityGarage.Plugin.Models.EnableMoney"
          },
          "Deductible" : {
            "type" : "string",
            "description" : "Gets or sets Is there a deductable to client (Selbstbehalt?).",
            "nullable" : true
          },
          "DeductibleAmount" : {
            "$ref" : "#/components/schemas/Enable.MobilityGarage.Plugin.Models.EnableMoney"
          },
          "VatPayment" : {
            "type" : "string",
            "description" : "Gets or sets Who should pay the VAT? Customer or Insurance.",
            "default" : "Insurance",
            "nullable" : true
          },
          "PaymentRemarks" : {
            "type" : "string",
            "description" : "Gets or sets some PaymentRemarks as information.",
            "nullable" : true
          }
        },
        "additionalProperties" : false,
        "description" : "Payment information."
      },
      "Enable.MobilityGarage.Plugin.Models.Principal" : {
        "type" : "object",
        "properties" : {
          "accountId" : {
            "type" : "string",
            "description" : "Gets or sets principle account id.",
            "nullable" : true
          },
          "associateId" : {
            "type" : "string",
            "description" : "Gets or sets associate id.",
            "nullable" : true
          },
          "userId" : {
            "type" : "string",
            "description" : "Gets or sets user id.",
            "nullable" : true
          }
        },
        "additionalProperties" : false,
        "description" : "All principle information to save / create WO automatically."
      },
      "Enable.MobilityGarage.Plugin.Models.Provider" : {
        "type" : "object",
        "properties" : {
          "accountId" : {
            "type" : "string",
            "description" : "Gets or sets provider account id.",
            "nullable" : true
          },
          "associateId" : {
            "type" : "string",
            "description" : "Gets or sets associate id.",
            "nullable" : true
          }
        },
        "additionalProperties" : false,
        "description" : "All provider reference information."
      },
      "Enable.MobilityGarage.Plugin.Models.RequestedDeliveryEnum" : {
        "enum" : [ "offer", "repair", "repair_withExpenseCap" ],
        "type" : "string"
      },
      "Enable.MobilityGarage.Plugin.Models.SpecialInstructionsEnum" : {
        "enum" : [ "document-damage" ],
        "type" : "string"
      },
      "Enable.MobilityGarage.Plugin.Models.TransmissionEnum" : {
        "enum" : [ "automatic", "manual" ],
        "type" : "string"
      },
      "Enable.MobilityGarage.Plugin.Models.YesNoEnum" : {
        "enum" : [ "no", "yes" ],
        "type" : "string"
      }
    }
  }
}